plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'checkstyle'
	id 'jacoco'
}

group = 'com.potatocountry'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.h2database:h2'
	implementation 'com.mysql:mysql-connector-j:8.0.33'
}

tasks.named('test') {
	useJUnitPlatform()
}

checkstyle {
	maxWarnings = 0
	configFile = file("${rootDir}/naver-checkstyle-rules.xml")
	configProperties = ["suppressionFile": "${rootDir}/naver-checkstyle-suppressions.xml"]
	toolVersion = "8.24"
}

test {
	useJUnitPlatform()
	ignoreFailures = false
	finalizedBy jacocoTestReport
	finalizedBy jacocoTestCoverageVerification
}

jacoco {
	toolVersion = "0.8.12"
	reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		csv.required = true
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			element = 'CLASS'
			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 0.3
			}
		}
	}
}

check.dependsOn jacocoTestCoverageVerification